[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "
{%- if cookiecutter.version_pattern == 'YYYY0M.BUILD[-TAG]' -%}
{% now 'utc', '%Y%m' %}.1001
{%- elif cookiecutter.version_pattern == 'MAJOR.MINOR.PATCH[PYTAGNUM]' -%}
0.1.0
{%- endif -%}
"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
readme = "README.md"

{% if cookiecutter.use_international_collaboration_packages != 'n' -%}
[[tool.poetry.source]]
name = "azure"
url = "https://pkgs.dev.azure.com/eon-seed/_packaging/portfolio-strategy-python/pypi/simple/"
{% endif -%}



[tool.poetry.dependencies]
{%- if (cookiecutter.python_major_version == "3") and (cookiecutter.python_minor_version == "8") %}
python = "^3.8.1,<4.0"  # latest black requires minimum Python 3.8.1.
{% else %}
python = "^{{cookiecutter.python_major_version}}.{{cookiecutter.python_minor_version}},<4.0"
{% endif -%}
{% if cookiecutter.project_type == 'fast_api' -%}
fastapi = "^0.74.1"
uvicorn = "^0.17.5"
{% elif cookiecutter.project_type == "typer_job" -%}
typer = "^0.7.0"
{% endif -%}



{%- if cookiecutter.empowered_environment == "Central Risk" %}
[tool.poetry.dev-dependencies]
{%- elif cookiecutter.empowered_environment == "Portfolio Strategy" %}
[tool.poetry.group.dev.dependencies]
{% endif %}
# Formatters
black = "^21.9b0"
isort = "5.9.3"
# Linters
flake8 = "4.0.1"
flake8-black = "0.2.3"
flake8-bugbear = "21.9.2"
flake8-isort = "4.1.1"
flake8-polyfill = "1.0.2"
pep8-naming = "0.12.1"
pydocstyle = "*"
mypy = "0.910"
# versioning
bumpver = "^2021.1113"
# Testing
pytest = "^6.2.0"
pytest-cov = "^3.0.0"
coverage = "^6.0.2"
# Documentation
sphinx = "^3.0.0"
sphinx_rtd_theme = "^0.5.0"
recommonmark = "^0.6.0"
pip-audit = "^2.4.3"

[build-system]
{%- if cookiecutter.empowered_environment == "Central Risk" %}
requires = ["poetry>=1.0"]
# When switching to newer poetry version, change dev-dependencies section title to [tool.poetry.group.dev.dependencies]
{%- elif cookiecutter.empowered_environment == "Portfolio Strategy" %}
requires = ["poetry>=1.3.0"]
{% endif %}
build-backend = "poetry.masonry.api"

[tool.black]
line-length = 110
target-version = ["py{{cookiecutter.python_major_version}}{{cookiecutter.python_minor_version}}"]

[tool.isort]
known_standard_library = ["dataclasses", "typing_extensions"]
force_to_top = ["typing"]
profile = "black"
lines_between_sections = 1
lines_after_imports = 2
line_length = 110
force_sort_within_sections = true

[bumpver]
current_version = "
{%- if cookiecutter.version_pattern == 'YYYY0M.BUILD[-TAG]' -%}
{% now 'utc', '%Y%m' %}.1001
{%- elif cookiecutter.version_pattern == 'MAJOR.MINOR.PATCH[PYTAGNUM]' -%}
0.1.0
{%- endif -%}
"
version_pattern = "{{cookiecutter.version_pattern}}"
commit_message = "bump version {old_version} -> {new_version} [skip ci on heads]"
commit = true
tag = true
push = true

[bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{pep440_version}"',
]
"{{cookiecutter.package_name}}/__init__.py" = [
    '__version__ = "{pep440_version}"',
]
